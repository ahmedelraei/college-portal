services:
  postgres:
    image: postgres:17-alpine
    container_name: college_portal_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: college_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - college_portal_network

  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: college_portal_app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: college_portal
      DB_SYNC: true
      DB_LOGGING: true
      JWT_SECRET: college_portal_jwt_secret_key_2024
      JWT_EXPIRES_IN: 30m
      FRONTEND_URL: http://localhost:3000
      NEXT_PUBLIC_API_URL: http://app:8080
    ports:
      - "8080:8080"
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app/apps/backend
      - backend_node_modules:/app/node_modules
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/apps/frontend/.next
    working_dir: /app
    command: pnpm run dev
    networks:
      - college_portal_network

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:
  frontend_next:

networks:
  college_portal_network:
    driver: bridge
